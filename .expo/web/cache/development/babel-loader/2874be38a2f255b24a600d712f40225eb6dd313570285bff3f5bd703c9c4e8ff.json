{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useNavigation } from '@react-navigation/native';\nimport ProductCard from \"../modules/cards/ProductCard\";\nimport Barcode from \"../modules/inputs/Barcode\";\nimport AddProduct from \"../modules/inputs/AddProduct\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Compra_Main() {\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showAddProduct = _useState2[0],\n    setShowAddProduct = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showScanner = _useState4[0],\n    setShowScanner = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    scannedProduct = _useState6[0],\n    setScannedProduct = _useState6[1];\n  var handleScan = function handleScan(_ref) {\n    var type = _ref.type,\n      data = _ref.data;\n    setScannedProduct(data);\n    setShowScanner(false);\n  };\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    products = _useState8[0],\n    setProducts = _useState8[1];\n  var handleAddProduct = function handleAddProduct(newProduct) {\n    setProducts([].concat(_toConsumableArray(products), [newProduct]));\n  };\n  var handleRemoveProduct = function handleRemoveProduct(index) {\n    var newProducts = _toConsumableArray(products);\n    newProducts.splice(index, 1);\n    setProducts(newProducts);\n  };\n  var handleUpdateProduct = function handleUpdateProduct(index, key, value) {\n    var newProducts = _toConsumableArray(products);\n    newProducts[index][key] = value;\n    setProducts(newProducts);\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item,\n      index = _ref2.index;\n    return _jsx(ProductCard, {\n      product: item,\n      index: index,\n      handleRemoveProduct: handleRemoveProduct,\n      handleUpdateProduct: handleUpdateProduct\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Button, {\n        title: \"Add Product\",\n        onPress: function onPress() {\n          return setShowAddProduct(true);\n        }\n      }), _jsx(Button, {\n        title: showScanner ? 'Cancel' : 'Scan Barcode',\n        onPress: function onPress() {\n          return setShowScanner(!showScanner);\n        }\n      })]\n    }), showAddProduct && _jsx(AddProduct, {\n      addProductToList: function addProductToList(name, quantity, price) {\n        setProductList([].concat(_toConsumableArray(productList), [{\n          name: name,\n          quantity: quantity,\n          price: price\n        }]));\n        setShowAddProduct(false);\n      }\n    }), showScanner && _jsx(Barcode, {\n      onBarCodeScanned: handleScan,\n      style: {\n        flex: 1\n      }\n    }), scannedProduct && _jsx(View, {\n      style: styles.productCard,\n      children: _jsxs(Card, {\n        children: [_jsx(Card.Title, {\n          children: scannedProduct\n        }), _jsx(Input, {\n          placeholder: \"Quantity\",\n          keyboardType: \"numeric\"\n        }), _jsx(Input, {\n          placeholder: \"Price\",\n          keyboardType: \"numeric\"\n        }), _jsx(Button, {\n          title: \"Remove\",\n          onPress: function onPress() {\n            return setScannedProduct(null);\n          }\n        })]\n      })\n    }), _jsx(FlatList, {\n      data: products,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.ean;\n      },\n      contentContainerStyle: styles.productsContainer\n    }), _jsx(Button, {\n      title: \"Go back home\",\n      onPress: function onPress() {\n        return navigation.navigate('Home');\n      }\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  addButton: {\n    backgroundColor: '#4caf50',\n    padding: 10,\n    borderRadius: 5\n  },\n  addButtonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  scanButton: {\n    backgroundColor: '#2196f3',\n    padding: 10,\n    borderRadius: 5\n  },\n  scanButtonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  productsContainer: {\n    flexGrow: 1,\n    padding: 10\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","Button","StyleSheet","TouchableOpacity","FlatList","useNavigation","ProductCard","Barcode","AddProduct","jsx","_jsx","jsxs","_jsxs","Compra_Main","navigation","_useState","_useState2","_slicedToArray","showAddProduct","setShowAddProduct","_useState3","_useState4","showScanner","setShowScanner","_useState5","_useState6","scannedProduct","setScannedProduct","handleScan","_ref","type","data","_useState7","_useState8","products","setProducts","handleAddProduct","newProduct","concat","_toConsumableArray","handleRemoveProduct","index","newProducts","splice","handleUpdateProduct","key","value","renderItem","_ref2","item","product","style","styles","container","children","header","title","onPress","addProductToList","name","quantity","price","setProductList","productList","onBarCodeScanned","flex","productCard","Card","Title","Input","placeholder","keyboardType","keyExtractor","ean","contentContainerStyle","productsContainer","navigate","create","backgroundColor","flexDirection","justifyContent","alignItems","padding","borderBottomWidth","borderBottomColor","addButton","borderRadius","addButtonText","color","fontWeight","scanButton","scanButtonText","flexGrow"],"sources":["/home/papi/projects/ispent_app/ispent/screens/compra/Compra_Main.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button, StyleSheet, TouchableOpacity, FlatList } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\n// Import the ProductCard component to display each product in the cart\nimport ProductCard from '../modules/cards/ProductCard';\nimport Barcode from '../modules/inputs/Barcode';\nimport AddProduct from '../modules/inputs/AddProduct';\n\nexport default function Compra_Main() {\n    const navigation = useNavigation();\n\n    // Add product state > toggle manual input.\n    const [showAddProduct, setShowAddProduct] = useState(false);\n\n    // Add product by bar code > toggle scanner\n    const [showScanner, setShowScanner] = useState(false);\n    const [scannedProduct, setScannedProduct] = useState(null);\n\n    const handleScan = ({ type, data }) => {\n        // do something with the scanned data\n        setScannedProduct(data);\n        setShowScanner(false);\n    };\n\n    // State to keep track of the scanned or manually added products in the cart\n    const [products, setProducts] = useState([]);\n\n    // Function to add a new product to the cart\n    const handleAddProduct = (newProduct) => {\n        setProducts([...products, newProduct]);\n    };\n\n    // Function to remove a product from the cart\n    const handleRemoveProduct = (index) => {\n        const newProducts = [...products];\n        newProducts.splice(index, 1);\n        setProducts(newProducts);\n    };\n\n    // Function to update the quantity or price of a product in the cart\n    const handleUpdateProduct = (index, key, value) => {\n        const newProducts = [...products];\n        newProducts[index][key] = value;\n        setProducts(newProducts);\n    };\n\n    // Render each product in the cart as a ProductCard component\n    const renderItem = ({ item, index }) => (\n        <ProductCard\n            product={item}\n            index={index}\n            handleRemoveProduct={handleRemoveProduct}\n            handleUpdateProduct={handleUpdateProduct}\n        />\n    );\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <Button title=\"Add Product\"\n                        onPress={() => setShowAddProduct(true)}\n                />\n                <Button\n                    title={showScanner ? 'Cancel' : 'Scan Barcode'}\n                    onPress={() => setShowScanner(!showScanner)}\n                />\n            </View>\n            {showAddProduct && (\n                <AddProduct\n                    addProductToList={(name, quantity, price) => {\n                        setProductList([...productList, { name, quantity, price }]);\n                        setShowAddProduct(false);\n                    }}\n                />\n            )}\n            {showScanner && (\n                <Barcode onBarCodeScanned={handleScan} style={{ flex: 1 }} />\n            )}\n\n            {scannedProduct && (\n                <View style={styles.productCard}>\n                    <Card>\n                        <Card.Title>{scannedProduct}</Card.Title>\n                        <Input placeholder=\"Quantity\" keyboardType=\"numeric\" />\n                        <Input placeholder=\"Price\" keyboardType=\"numeric\" />\n                        <Button title=\"Remove\" onPress={() => setScannedProduct(null)} />\n                    </Card>\n                </View>\n            )}\n            <FlatList\n                data={products}\n                renderItem={renderItem}\n                keyExtractor={(item) => item.ean}\n                contentContainerStyle={styles.productsContainer}\n            />\n\n            <Button\n                title=\"Go back home\"\n                onPress={() => navigation.navigate('Home')}\n            />\n        </View>\n    );\n};\n\n// Style sheet for the CartScreen component\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: 10,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n    },\n    addButton: {\n        backgroundColor: '#4caf50',\n        padding: 10,\n        borderRadius: 5,\n    },\n    addButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n    },\n    scanButton: {\n        backgroundColor: '#2196f3',\n        padding: 10,\n        borderRadius: 5,\n    },\n    scanButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n    },\n    productsContainer: {\n        flexGrow: 1,\n        padding: 10,\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}